// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  Profile Profile?
  @@map(name: "users")
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id        String   @id @default(uuid())
  firstname String?
  lastname  String?
  biography String?
  avatarUrl String?  @map(name: "avatar_url")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  user     User       @relation(fields: [userId], references: [id])
  userId   String     @map(name: "user_id")
  Picture  Picture[]
  Album    Album[]
  Category Category[]

  @@map(name: "profiles")
}

model Picture {
  id          String   @id @default(uuid())
  title       String
  description String?
  url         String
  profile     Profile  @relation(fields: [profileId], references: [id])
  profileId   String   @map(name: "profile_id")
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")
  albums      Album[]

  @@map(name: "pictures")
}

model Album {
  id          String   @id @default(uuid())
  title       String
  description String?
  published   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map(name: "updated_at")

  profile    Profile    @relation(fields: [profileId], references: [id])
  profileId  String     @map(name: "profile_id")
  pictures   Picture[]
  categories Category[]

  @@map(name: "albums")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at")

  albums    Album[]
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @map(name: "profile_id")

  @@map(name: "categories")
}
